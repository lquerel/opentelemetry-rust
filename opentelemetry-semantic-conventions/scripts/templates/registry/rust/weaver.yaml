# Whitespace control settings to simplify the definition of templates
whitespace_control:
  trim_blocks: true
  lstrip_blocks: true

text_maps:
  # Map of the semconv types to the corresponding Rust types.
  rust_type:
    int: i64
    double: f64
    boolean: bool
    string: String
    string[]: Vec<String>
    int[]: Vec<i64>
    double[]: Vec<f64>
    boolean[]: Vec<bool>

# Configuration for the comment formatting
comment_formats:
  rust:
    format: markdown
    prefix: "/// "
    trim: true
    remove_trailing_dots: true
default_comment_format: rust

params:
  schema_url: "https://opentelemetry.io/schemas/1.27.0"
  exclude_root_namespace: []
  excluded_attributes: ["messaging.client_id"]
#  exclude_stability: ["experimental"]
#  exclude_deprecated: true

templates:
  - pattern: attribute.rs.j2
    filter: semconv_grouped_attributes($params)
    application_mode: single
  - pattern: metric.rs.j2
    filter: semconv_grouped_metrics($params)
    application_mode: single
  - pattern: resource.rs.j2
    filter: >
      semconv_signal("resource"; $params) 
      | map(.attributes[])
      | unique_by(.name)
      | sort_by(.name)
      | map({name, brief, examples, requirement_level, stability, type})
    application_mode: single
  - pattern: trace.rs.j2
    filter: >
      semconv_signal("span"; $params) 
      | map(.attributes[])
      | unique_by(.name)
      | sort_by(.name)
      | map({name, brief, examples, requirement_level, stability, type})
    application_mode: single
  - pattern: lib.rs.j2
    filter: .
    application_mode: single